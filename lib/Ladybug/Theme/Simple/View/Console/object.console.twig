{% import "_macros.console.twig" as m %}

{% spaceless %}

    {% if visibility is not null %}
        [{{ m.visibility_text(visibility) }}]
    {% endif %}

    {{ m.array_key(key) }}

    <t_object>object({{ var.className }})</t_object><intro>

    {% if var.objectCustomData is not empty %}
        {#{ m.array_block('Data', var.objectCustomData, var.level + 1) }#}
        {{ render_type(var.objectCustomData)|raw }}
    {% endif %}

    {% if var.objectProperties is not empty %}
        {{ m.indent(level) }}<t_array_block>Properties</t_array_block><intro>
        {% for data in var.objectProperties %}
            {{ m.indent(var.level) }} {{ render_type(data.value, data.name, data.visibility)|raw }}
            <intro>
        {% endfor %}
    {% endif %}

    {% if var.hasClassInfo() %}
        {% set class_info_data = {} %}

        {# Filename #}
        {% if var.classFile is not empty %}
            {% set class_info_data = class_info_data|merge({'Filename': var.classFile}) %}
        {% endif %}

        {# Interfaces #}
        {% if var.classInterfaces is not empty %}
            {% set class_info_data = class_info_data|merge({'Interfaces': var.classInterfaces}) %}
        {% endif %}

        {# Namespace #}
        {% if var.classNamespace is not empty %}
            {% set class_info_data = class_info_data|merge({'Namespace': var.classNamespace}) %}
        {% endif %}

        {# Parent #}
        {% if var.classParent is not empty %}
            {% set class_info_data = class_info_data|merge({'Parent': var.classParent}) %}
        {% endif %}

        {{ m.text_block('Class info', class_info_data, var.level, true) }}
    {% endif %}

    {% if var.classConstants is not empty %}
        {{ m.indent(var.level) }}<t_array_block>Constants</t_array_block><intro>
        {% for constant in var.classConstants %}
            {{ m.indent(var.level) }}{{ render_type(constant.value, constant.name)|raw }}
                <intro>
        {% endfor %}
    {% endif %}

    {% if var.classMethods is not empty %}
        {{ m.indent(var.level) }}<t_array_block>Methods</t_array_block><intro>
        {% for method in var.classMethods %}
            {{ m.indent(var.level) }}{{ m.render_object_method(method) }}
                    <intro>
        {% endfor %}
    {% endif %}

{% endspaceless %}
