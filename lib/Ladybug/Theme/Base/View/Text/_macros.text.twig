{% macro indent(level) %}
    {{ '<tab>'|repeat(level-1)|tags|raw }}
{% endmacro %}

{% macro array_block(title, data, level, show_keys) %}
    {{ _self.indent(level) }}{{ title }}<intro>

    {% for key,var in data %}
        {{ _self.indent(level) }}
        {{ var.render(key, 'txt')|raw }}
    {% endfor %}
{% endmacro %}

{% macro text_block(title, data, level, show_keys) %}
    {{ _self.indent(level) }}{{ title }}<intro>

    {% for key,var in data %}
        {{ _self.indent(level) }}
        {% if show_keys %}{{ key }}:<space>{% endif %}
        {{ var|replace({' ': '<space>'})|raw }}<intro>
    {% endfor %}
{% endmacro %}

{% macro array_key(key) %}
    {% if key is not empty %}
        [{{ key|replace({' ': '<space>'})|raw }}]:<space>
    {% endif %}
{% endmacro %}


{% macro property_visibility(var) %}
    {% if var is not empty %}
        {% if key.visibility is defined %}
            {{ _self.visibility_name(key.visibility) }}
        {% endif %}
    {% endif %}
{% endmacro %}

{% macro render_object_method(method, level) %}
    {{ _self.indent(level) }}
    {{ _self.visibility_name(method.visibility) }}<space>
    {{ method.name }}(

    {% for methodParameter in method.parameters %}
        {% if methodParameter.type is not empty %}
            {{ methodParameter.type }}<space>
        {% endif %}
        ${{ methodParameter.name }}

        {% if methodParameter.defaultValue is not null %}
            <space>=<space> {{ methodParameter.defaultValue.inlineValue|tags|raw }}
        {% endif %}{% if not loop.last %},<space>{% endif %}
    {% endfor %}
                    )
{% endmacro %}


{% macro visibility_name(visibility) %}
    {% if visibility == constant('Ladybug\\Type\\ObjectType\\VisibilityInterface::VISIBILITY_PRIVATE') %}
        private
    {% elseif visibility == constant('Ladybug\\Type\\ObjectType\\VisibilityInterface::VISIBILITY_PROTECTED') %}
        protected
    {% else %}
        public
    {% endif %}
{% endmacro %}